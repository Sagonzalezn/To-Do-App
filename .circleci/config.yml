version: 2.1

on:
  push:
    branches:
      - main
      - feature/Demo
    pull_request:
      - main

workflows:
  build_test:
    jobs:
      - build_and_test
      - push:
          context: env #contexto para variables de entorno
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - main
  schedule:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build_and_test
  #build_and_deploy:
  #  jobs:
  #    - build_and_test
  #    - deploy:
  #        requires:
  #          - build_and_test
  #        filters:
  #          branches:
  #            only: main

jobs:
  build_and_test:
    docker:
      - image: node:12-alpine
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: cd app && yarn install
      - run:
          name: Run tests
          command: cd app &&  yarn test
      - run:
          name: Run Confirmation Message
          command: echo "All tests passed :D"

  push:
    docker:
      - image: node:12-alpine
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install docker
          command: apk add docker
      - run:
          name: Debug Information
          command: |
            # Check the contents of VERSION.txt and its format
            echo "Listing files and their contents:"
            ls -la
            cat VERSION.txt || echo "VERSION.txt file is missing or empty"
      - run:
          name: Build Docker image
          command: |
            TAG=$(cat VERSION.txt)
            echo "New version is: $TAG"
            if [[ -z "$TAG" || "$TAG" =~ [^a-zA-Z0-9._-] ]]; then
              echo "Invalid Docker tag format: $TAG"
              exit 1
            fi
            # Build the Docker image
            docker build -t sagonzalezn/vagrant-node:${TAG} ./app
      - run:
          name: Push Docker image to dockerhub
          command: |
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            docker push sagonzalezn/vagrant-node:1.1.3
            docker tag sagonzalezn/vagrant-node:1.1.3 sagonzalezn/vagrant-node:latest
            docker push sagonzalezn/vagrant-node:latest
  
  deploy:
    docker:
      - image: ubuntu:latest
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:F09I/es6VVTMxbQW01Ifa4vkYlk5EOd56pjzrosmuh8"
      - run:
          name: Deploy Containers to Vagrant Machine
          command: |
            apt update
            apt install openssh-client -y
            apt install net-tools
            ifconfig
            ssh -o StrictHostKeyChecking=no vagrant@$SSH_CONNECTION '
              docker compose -f /vagrant/docker-compose.yml pull

              docker compose -f /vagrant/docker-compose.yml up -d --build
            '

  
